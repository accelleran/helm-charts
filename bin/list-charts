#!/bin/bash

GIT_ROOT=$(cd "$(dirname "$0")/.." && pwd)

function usage() {
    echo "Usage:"
    echo "list-charts"
    echo "    -h                      Display usage."
    echo "    -a                      List only application charts."
    echo "    -l                      List only library charts."
    echo "    -i                      List ignored install charts."
    echo "    -n                      List charts by name."
    echo "    -p                      List charts by path."
    exit 0
}

function error() {
    echo "${1}" 1>&2
    exit 1
}

list_application_charts=false
list_library_charts=false

list_charts_to_ignore_for_test=false
list_charts_to_test=false

list_chart_names=false

while getopts ":halitnp" opt; do
    case ${opt} in
        h )
            usage
        ;;
        a )
            list_application_charts=true
        ;;
        l )
            list_library_charts=true
        ;;
        i )
            list_charts_to_ignore_for_test=true
        ;;
        t )
            list_charts_to_test=true
        ;;
        n )
            list_chart_names=true
        ;;
        p )
            list_chart_names=false
        ;;
        \? )
            error "Invalid Option: -${OPTARG}"
        ;;
    esac
done
shift $((OPTIND -1))

if [[ "${list_application_charts}" == false && "${list_library_charts}" == false && "${list_charts_to_ignore_for_test}" == false && "${list_charts_to_test}" == false ]]; then
    list_application_charts=true
    list_library_charts=true
fi

if [[ "${list_charts_to_ignore_for_test}" == true ]]; then
    chart_paths=$(find "${GIT_ROOT}"/charts/ -type d -exec sh -c 'test -f ${0}/Chart.yaml -a -f ${0}/.ct-install-ignore && echo ${0}/Chart.yaml' {} \;)
elif [[ "${list_charts_to_test}" == true ]]; then
    chart_paths=$(find "${GIT_ROOT}"/charts/ -type d -exec sh -c 'test -f ${0}/Chart.yaml -a ! -f ${0}/.ct-install-ignore && yq -e '\''.type == "application"'\'' ${0}/Chart.yaml >/dev/null 2>&1 && echo ${0}' {} \;)
elif [[ "${list_application_charts}" == true && "${list_library_charts}" == true ]]; then
    chart_paths=$(find "${GIT_ROOT}"/charts/ -type f -name 'Chart.yaml')
elif [[ "${list_application_charts}" == true ]]; then
    chart_paths=$(find "${GIT_ROOT}"/charts/ -type f -name 'Chart.yaml' -exec sh -c 'yq -e '\''.type == "application"'\'' ${0} >/dev/null 2>&1 && echo ${0}' {} \;)
elif [[ "${list_library_charts}" == true ]]; then
    chart_paths=$(find "${GIT_ROOT}"/charts/ -type f -name 'Chart.yaml' -exec sh -c 'yq -e '\''.type == "library"'\'' ${0} >/dev/null 2>&1 && echo ${0}' {} \;)
fi

chart_paths=$(echo "${chart_paths}" | sed -r 's|/(Chart\.yaml)?$||' | sort -u | sed -z 's/\n/,/g;s/,$/\n/')

if [[ "${list_chart_names}" == true ]] ; then
    chart_names=""
    for lc in ${chart_paths//,/ } ; do
        chart_names+="$(basename "${lc}"),"
    done

    echo "${chart_names}" | sed -r 's/,$//g'
else
    echo "${chart_paths}"
fi
