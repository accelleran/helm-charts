global:
  enable4G: false
  enable5G: true

  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

  imagePullSecrets:
    - name: accelleran-secret

  persistentLogLevel: info

  nodeSelector: {}

bootstrap:
  create: true
  name: ""

  kafka:
    enabled: true
    hostname: ""
    port: 0

config:
  # Defined for server config.json
  defaultServiceNamespace: "{{ $.Release.Namespace }}"
  defaultOranNamespace: "{{ $.Release.Namespace }}"
  backendServerPort: 5000
  nodeApiURL: ""
  nodeApiPort: "{{ $.Values.service.ports.http.nodePort }}"
  serviceName: ""
  servicePort: "{{ $.Values.service.ports.http.port }}"
  keycloakURL: ""
  keycloakRealm: ""
  kafkaURL: ""
  kafkaPort: 9092
  networkStateMonitorHost: ""
  networkStateMonitorPort: 5000
  svcMonitorHost: ""
  svcMonitorPort: 80
  svcOrchestratorHost: ""
  svcOrchestratorPort: 80
  grafanaHost: ""
  grafanaApiPort: 80
  lokiHost: ""
  lokiPort: ""
  configApiHost: ""
  configApiPort: 80
  pcixAppPodName: ""
  pcixAppPort: 80
  ksqldbPodName: ""
  ksqldbPort: 80
  LteRadioControllerLabel: "4G-Radio-Controller"
  topologyExpired: 5000
  kafkaTopics:
    - "accelleran.drax.5g.ric.raw.cu_state"
    - "accelleran.drax.5g.ric.raw.ue_measurements"
    - "accelleran.drax.4g.ric.raw.network_state"
    - "accelleran.drax.all.ric.processed.anr"
  # Defined for core-ui config.js
  grafanaNodePort: 0
  grafanaPathPrefix: ""
  accelleranProduct: "P5G"
  # Defined for environment variable DRAX_VERSION
  draxVersionConfigmap: ""

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

kafkaInitImage:
  repository: accelleran/acc-generic-img
  pullPolicy: IfNotPresent
  tag: "0.9.0"

image:
  repository: accelleran/dash-front-back-end
  pullPolicy: IfNotPresent
  tag: ""

accelleranLicense:
  enabled: false

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  runAsUser: 0

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

service:
  enabled: true
  name: ""
  type: ClusterIP
  ports:
    http:
      port: 5000
      targetPort: 5000
      protocol: TCP

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    -
      # host: example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          port: http
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

extraResources: []

extraEnvs: []
