apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $.Release.Name }}-influxdb2-downsampling-job
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: create-flux-tasks
        image: curlimages/curl:latest
        env:
        - name: INFLUXDB_URL
          value: "http://{{ $.Release.Name }}-influxdb2.{{ $.Release.Namespace }}:80" 
        - name: ORG
          value: "accelleran"
        - name: INFLUXDB_TOKEN
          valueFrom:
            secretKeyRef:
              name: drax-influxdb2-auth  
              key: admin-token 
        command:
        - /bin/sh
        - -c
        - |
          sleep 30
          echo "Creating downsampling tasks in InfluxDB2..."

          for METRIC in \
            "default_performance_metrics" \
            "rrc_measurements" \
            "rrc_connection_metrics" \
            "handover_and_mobility_metrics" \
            "pdu_session_management_metrics" \
            "radio_resource_utilization_metrics" \
            "throughput_metrics" \
            "du_ue_measurements" \
            "du_rlc_measurements"
          do
            echo "Creating tasks for $METRIC..."

            # Raw to 1m
            curl --request POST "${INFLUXDB_URL}/api/v2/tasks" \
                 --header "Authorization: Token ${INFLUXDB_TOKEN}" \
                 --header "Content-Type: application/json" \
                 --data '{
                   "org": "'${ORG}'",
                   "name": "downsample_'$METRIC'_to_1m",
                   "flux": "option task = {name: \"downsample_'$METRIC'_to_1m\", every: 1h}\nfrom(bucket: \"'$METRIC'\")\n  |> range(start: -1h)\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> to(bucket: \"'$METRIC'_1m\", org: \"'${ORG}'\")"
                 }'

            # Raw to 5m
            curl --request POST "${INFLUXDB_URL}/api/v2/tasks" \
                 --header "Authorization: Token ${INFLUXDB_TOKEN}" \
                 --header "Content-Type: application/json" \
                 --data '{
                   "org": "'${ORG}'",
                   "name": "downsample_'$METRIC'_to_5m",
                   "flux": "option task = {name: \"downsample_'$METRIC'_to_5m\", every: 1h}\nfrom(bucket: \"'$METRIC'\")\n  |> range(start: -6h)\n  |> aggregateWindow(every: 5m, fn: mean, createEmpty: false)\n  |> to(bucket: \"'$METRIC'_5m\", org: \"'${ORG}'\")"
                 }'

            # Raw to 15m
            curl --request POST "${INFLUXDB_URL}/api/v2/tasks" \
                 --header "Authorization: Token ${INFLUXDB_TOKEN}" \
                 --header "Content-Type: application/json" \
                 --data '{
                   "org": "'${ORG}'",
                   "name": "downsample_'$METRIC'_to_15m",
                   "flux": "option task = {name: \"downsample_'$METRIC'_to_15m\", every: 1h}\nfrom(bucket: \"'$METRIC'\")\n  |> range(start: -24h)\n  |> aggregateWindow(every: 15m, fn: mean, createEmpty: false)\n  |> to(bucket: \"'$METRIC'_15m\", org: \"'${ORG}'\")"
                 }'
          done

          echo "All tasks created successfully!"
