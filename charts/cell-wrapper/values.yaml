global:
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

  bootstrap:
    create: true
    configMapName: ""

    # CW Instance ID
    #   Description:  The Instance ID of the CW component that
    #                 will be used in the bootstrap file.
    #                 The Instance ID must consist of lower case alphanumeric characters
    #                 or '-', start with an alphabetic character, and end with an alphanumeric
    #                 character (e.g. 'my-name',  or 'abc-123', regex used for validation is
    #                 '^[a-z0-9-]+$'). The Instance ID also cannot be longer than 19 characters!
    #
    #   Example:
    # instanceId: "cw"
    #
    instanceId: "cw"

    redis:
      hostname: "ric-redis-5g"
      port: "6379"

    nats:
      hostname: "ric-nats-5g"
      port: "4222"

  drax:
    technology: "5g"
    role: "5g"

  # dRAX Specific Node Selector
  #   Description: This is a special nodeSelector field implemented for the
  #                Accelleran 5G Helm charts. You need to first label your
  #                node in Kubernetes with a label "draxName" and give it a
  #                <value>. For example for node <node_name>, you can use the
  #                following command to label it:
  #                kubectl label node <node_name> draxName=<value>.
  #                Then in "draxName" set the value of the label you chose for
  #                the node. This will in effect install all the 5G Application
  #                on that node, without the need to edit all individual helm
  #                charts. In case you want to add other nodeSelector options,
  #                you have to add them to the helm chart specific values files.
  #   Value type: bool
  #   Example:
  #
  draxNodeSelectorEnabled: false
  draxNodeSelector:
    draxName: "main"

nameOverride: ""
fullnameOverride: ""

cw-ctrl:
  enabled: true
  
  nameOverride: "cw-ctrl"
  fullnameOverride: ""

  containerName: "cw-ctrl"

  initImage:
    repository: accelleran/acc-generic-img
    pullPolicy: IfNotPresent
    tag: "latest"

  image:
    repository: accelleran/cw-ctrl
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets:
    - name: accelleran-secret

  extraEnvs: []

  extraLabels: {}
  annotations: {}

  serviceAccount:
    create: true
    annotations: {}
    name: ""

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  draxNodeSelectorEnabled: false
  draxNodeSelector:
    draxName: "{{ $.Values.global.draxNodeSelector.draxName }}"

  nodeSelector: {}

  tolerations: []

  affinity: {}


cw-inst:
  enabled: true

  nameOverride: "cw-inst"
  fullnameOverride: ""

  containerName: "cw-inst"

  secrets:
    sshKey: "cw-ssh-key"

  baseConfig:
    configDir: "/workdir/config"
    vendors: null
      # effnet:
      # - file: "default.du.json"
      #   data: |
      #     <data>
      # - file: "default.kpi.json"
      #   data: |
      #     <data>
      # phluido:
      # - file: "default.l1.cfg"
      #   data: |
      #     <data>
      # nodeh:
      # - file: "default.json"
      #   data: |
      #     <data>

  replicaCount: 0

  image:
    repository: "accelleran/cw-inst"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  extraLabels: {}
  annotations: {}

  imagePullSecrets:
    - name: accelleran-secret

  podAnnotations: {}

  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: true
    minReplicas: null
    maxReplicas: null
    spareReplicas: null
    factorReplicas: null

  draxNodeSelectorEnabled: false
  draxNodeSelector:
    draxName: "{{ $.Values.global.draxNodeSelector.draxName }}"

  nodeSelector: {}

  tolerations: []

  affinity: {}


instance-scaler:
  enabled: true

  nameOverride: "instance-scaler"
  fullnameOverride: ""

  containerName: "instance-scaler"

  image:
    repository: accelleran/instance-scaler
    pullPolicy: IfNotPresent
    tag: "v0.1.0"

  extraLabels: {}
  annotations: {}

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  rbac:
    enabled: true
    rules:
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - "get"
        - "update"


netconf:
  enabled: true

  nameOverride: "netconf"
  fullnameOverride: ""

  containerName: "netconf"

  image:
    repository: accelleran/cw-netconf
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  readinessProbe:
    exec:
      command:
        - "test"
        - "-f"
        - "ready"
    initialDelaySeconds: 15
    periodSeconds: 30

  extraLabels: {}
  annotations: {}

  service:
    enabled: true
    name: ""
    annotations: {}
    type: "NodePort"
    portName: "netconf"
    protocol: "TCP"
    port: 8300
    targetPort: null
    nodePort: null
